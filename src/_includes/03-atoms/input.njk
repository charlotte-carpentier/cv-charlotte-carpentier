{#
=========================
         INPUT            
=========================
#}

{% macro renderInput(options) %}
  {% set inputData = null %}
  
  {% for input in options.datas.inputs %}
    {% if input.name == options.name %}
      {% set inputData = input %}
    {% endif %}
  {% endfor %}

  {% set globalStyle = options.datas.globalStyle %}
  {% set inputWidth = options.datas.inputWidth | default('w-64') %} 

  {% if inputData %}
    {% set variantStyle = options.datas.variants[inputData.style] | default('') %}
    
    <div class="flex flex-col gap-1 {{ globalStyle }} {{ variantStyle }}">
      {% if inputData.label %}
        <label for="{{ inputData.id }}" class="font-medium text-gray-700">
          {{ inputData.label }}{% if inputData.required %} *{% endif %}
        </label>
      {% endif %}

      {% set baseClasses = "border rounded-md px-3 py-2 focus:outline-none " ~ inputWidth %}
      {% set stateClasses = {
        'default': options.datas.variants.default | default('border-gray-300'),
        'hover': options.datas.variants.hover | default('border-blue-400'),
        'focus': options.datas.variants.focus | default('border-blue-600 ring-1 ring-blue-600'),
        'active': options.datas.variants.active | default('border-blue-700'),
        'disabled': options.datas.variants.disabled | default('border-gray-200 bg-gray-100 cursor-not-allowed'),
        'filled': options.datas.variants.filled | default('border-green-500'),
        'critical': options.datas.variants.critical | default('border-red-500')
      } %}
      
      {% set inputClasses = baseClasses ~ ' ' ~ stateClasses.default %}
      
      {% if inputData.type in ["text", "phone"] %}
        <input 
          type="{{ inputData.type }}" 
          id="{{ inputData.id }}" 
          name="{{ inputData.name }}" 
          placeholder="{{ inputData.placeholder }}" 
          class="{{ inputClasses }}"
          onfocus="this.className='{{ baseClasses }} {{ stateClasses.focus }}'" 
          onblur="this.className='{{ baseClasses }} {{ stateClasses.default }}'" 
          onmouseover="this.className='{{ baseClasses }} {{ stateClasses.hover }}'" 
          onmousedown="this.className='{{ baseClasses }} {{ stateClasses.active }}'" 
          {% if inputData.disabled %}disabled class="{{ stateClasses.disabled }}"{% endif %}
        />
      {% elif inputData.type == "textarea" %}
        <textarea 
          id="{{ inputData.id }}" 
          name="{{ inputData.name }}" 
          placeholder="{{ inputData.placeholder }}" 
          class="{{ inputClasses }}"
          onfocus="this.className='{{ baseClasses }} {{ stateClasses.focus }}'" 
          onblur="this.className='{{ baseClasses }} {{ stateClasses.default }}'" 
          onmouseover="this.className='{{ baseClasses }} {{ stateClasses.hover }}'" 
          onmousedown="this.className='{{ baseClasses }} {{ stateClasses.active }}'" 
          {% if inputData.disabled %}disabled class="{{ stateClasses.disabled }}"{% endif %}
        ></textarea>
      {% elif inputData.type in ["select", "multi-select"] %}
        <select id="{{ inputData.id }}" name="{{ inputData.name }}" 
          {% if inputData.type == "multi-select" %}multiple{% endif %} 
          class="{{ inputClasses }}"
          onfocus="this.className='{{ baseClasses }} {{ stateClasses.focus }}'" 
          onblur="this.className='{{ baseClasses }} {{ stateClasses.default }}'" 
          onmouseover="this.className='{{ baseClasses }} {{ stateClasses.hover }}'" 
          onmousedown="this.className='{{ baseClasses }} {{ stateClasses.active }}'" 
          {% if inputData.disabled %}disabled class="{{ stateClasses.disabled }}"{% endif %}>
          {% for option in inputData.options %}
            <option value="{{ option.value }}">{{ option.label }}</option>
          {% endfor %}
        </select>
      {% elif inputData.type == "datepicker" %}
        <input 
          type="date" 
          id="{{ inputData.id }}" 
          name="{{ inputData.name }}" 
          class="{{ inputClasses }}"
          onfocus="this.className='{{ baseClasses }} {{ stateClasses.focus }}'" 
          onblur="this.className='{{ baseClasses }} {{ stateClasses.default }}'" 
          onmouseover="this.className='{{ baseClasses }} {{ stateClasses.hover }}'" 
          onmousedown="this.className='{{ baseClasses }} {{ stateClasses.active }}'" 
          {% if inputData.disabled %}class="{{ stateClasses.disabled }}" disabled{% endif %}
        />
      {% endif %}

      {% if inputData.state == 'critical' and inputData.errorMessage %}
        <p class="text-red-500 text-sm mt-1">{{ inputData.errorMessage }}</p>
      {% endif %}
    </div>
  {% else %}
    <span class="text-red-500">Input not found: {{ options.name }}</span>
  {% endif %}
{% endmacro %}



{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "03-atoms/input.njk" import renderInput %}

2. Call a specific input by its name
{{ renderInput({ name: "example_input1", datas: atoms.inputs }) }}

3. Call multiple inputs from the data
{% for input in atoms.inputs.inputs %}
    {{ renderInput({ 
        name: input.name, 
        datas: atoms.inputs 
    }) }}
{% endfor %}

4. Direct input creation
{{ renderInput({
    id: "custom-input", 
    name: "custom_input", 
    label: "Custom Input", 
    placeholder: "Enter something...", 
    type: "text", 
    style: "primary"
}) }}

5. Adding a new input to inputs.json
{
  "inputs": [
    {
      "name": "example_input1",
      "id": "input1",
      "label": "Example Input 1",
      "placeholder": "Enter text...",
      "type": "text",
      "style": "primary"
    }
  ]
}

May your bugs be forever exiled to the shadow realm. âœ¨
#}
