<!-- ========================= -->
<!--     INPUT MULTI SELECT    -->
<!-- ========================= -->

{% from "03-atoms/chip-multi-select.njk" import renderChipMultiSelect %}

{% macro renderInputMultiSelect(option) %}
  {# Extract needed properties with defaults #}
  {% set name = option.name | default('input-select') %}
  {% set title = option.title | default('Select options') %}
  {% set options = option.options | default([]) %}
  {% set variant = option.variant | default(input_multi_select.defaultProps.variant) %}
  {% set disabled = option.disabled | default(false) %}
  {% set placeholder = option.placeholder | default('Type to search...') %}
  {% set useChips = option.useChips | default(false) %}

  <div class="input-multi-select" data-multi-select-container id="{{ name }}-container">
    {% if title %}
      <label for="{{ name }}-input" class="block text-sm font-medium text-gray-700 mb-2">
        {{ title }}
      </label>
    {% endif %}
    
    {# Add input field for searching/adding new options #}
    <div class="relative mb-2">
      <input 
        type="text" 
        id="{{ name }}-input"
        placeholder="{{ placeholder }}"
        class="w-full p-2 border border-gray-300 rounded-md"
        {% if disabled %}disabled{% endif %}
        data-multi-select-input
      />
    </div>
    
    {# Use either chip component or default implementation based on useChips option #}
    <div class="selected-options" data-selected-options-container>
      {% if useChips %}
        {{ renderChipMultiSelect({
          name: name,
          title: '',
          variant: variant,
          options: options,
          disabled: disabled
        }) }}
      {% else %}
        {# Default implementation - similar to original #}
        <div class="{{ input_multi_select.variants[variant].container }}" role="group" aria-label="{{ title }}">
          {% for opt in options %}
            <div 
              class="{{ input_multi_select.variants[variant].chip.base }} {{ input_multi_select.variants[variant].chip.default }}"
              data-state="default"
              data-hover-class="{{ input_multi_select.variants[variant].chip.hover }}"
              data-focus-class="{{ input_multi_select.variants[variant].chip.focus }}"
              data-disabled-class="{{ input_multi_select.variants[variant].chip.disabled }}"
              data-option-value="{{ opt.value }}"
              role="button"
              tabindex="{% if disabled or opt.disabled %}-1{% else %}0{% endif %}"
              {% if disabled or opt.disabled %}aria-disabled="true"{% endif %}
            >
              <span class="chip-label">{{ opt.label }}</span>
              <button type="button" 
                class="chip-remove {{ input_multi_select.variants[variant].chip.removeIcon }}"
                aria-label="Remove {{ opt.label }}"
                {% if disabled or opt.disabled %}disabled{% endif %}
              >
                <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" class="w-3.5 h-3.5">
                  <path d="M6.28 5.22a.75.75 0 00-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 101.06 1.06L10 11.06l3.72 3.72a.75.75 0 101.06-1.06L11.06 10l3.72-3.72a.75.75 0 00-1.06-1.06L10 8.94 6.28 5.22z" />
                </svg>
              </button>
            </div>
          {% endfor %}
        </div>
      {% endif %}
    </div>
    
    {# Hidden input to store the final selection values for form submission #}
    <input type="hidden" name="{{ name }}_values" id="{{ name }}-values" data-multi-select-values />
  </div>
{% endmacro %}

<!-- ========================= -->
<!-- HOW TO USE THIS COMPONENT -->
<!-- ========================= -->

<!--
  Complete documentation in Storybook
  Basic usage: {% from "03-atoms/input-multi-select.njk" import renderInputMultiSelect %}
               {{ renderInputMultiSelect(input_multi_selects.input_multi_select_data.geek_languages) }}
  
  With Chips: {{ renderInputMultiSelect({
                 name: "languages",
                 title: "Programming Languages",
                 options: [
                   { value: "js", label: "JavaScript" },
                   { value: "py", label: "Python" }
                 ],
                 useChips: true  // Use the chip-multi-select component
               }) }}
  
  Features:
  - Optional integration with chip-multi-select component via useChips parameter
  - Maintains backward compatibility with original implementation
  - Text input for searching/adding new options
  - Fully accessible with proper ARIA attributes
-->