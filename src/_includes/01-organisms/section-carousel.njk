{# 
=========================
    SECTION CAROUSEL        
=========================
#}

{% from "03-atoms/heading.njk" import renderHeading %}
{% from "03-atoms/link.njk" import renderLink %}
{% from "03-atoms/icon.njk" import renderIcon %}
{% from "01-organisms/carousel.njk" import renderCarousel %}

{% macro renderSectionCarousel(options) %}
    {# Check if data is provided #}
    {% if options.datas %}
        {# Get styles and configuration #}
        {% set globalStyle = options.datas.globalStyle | default("section-carousel") %}
        {% set sectionStyles = options.datas.sectionStyles | default({}) %}
        {% set reversed = options.reversed | default(false) %}
        {% set carouselTheme = "light" %}

        {# Find specific section configuration #}
        {% set sectionData = null %}
        {% if options.name %}
            {% for section in options.datas.sections %}
                {% if section.name == options.name %}
                    {% set sectionData = section %}
                {% endif %}
            {% endfor %}
        {% endif %}

        {# Fallback to first section if not found #}
        {% if not sectionData %}
            {% set sectionData = options.datas.sections[0] %}
        {% endif %}

        {# Validation: Check if this section has a carousel #}
        {% if not sectionData.hasCarousel or not sectionData.carouselName %}
            <span class="text-red-500">Section Carousel Error: This component requires a carousel configuration.</span>
        {% else %}
            {# Get variant styling #}
            {% set variant = options.datas.variants[sectionData.variant] | default(options.datas.variants.default) %}
            
            {# Extract icon styles with default values #}
            {% set iconStyle = "text-[theme(--ma-nautic-teal)]" %}
            {% set iconContainerSize = "w-12 h-12 lg:w-16 lg:h-16" %}
            {% set iconDefault = "mx-auto" %}
            {% set iconSize = "32" %}
            {% if sectionData.iconVariant and options.datas.variants[sectionData.iconVariant] %}
                {% set iconDefault = options.datas.variants[sectionData.iconVariant].default | default('mx-auto') %}
                {% set iconStyle = options.datas.variants[sectionData.iconVariant].iconStyle | default('text-[theme(--ma-nautic-teal)]') %}
                {% set iconContainerSize = options.datas.variants[sectionData.iconVariant].containerSize | default('w-12 h-12 lg:w-16 lg:h-16') %}
                {% set iconSize = options.datas.variants[sectionData.iconVariant].iconSize | default('32') %}
            {% endif %}

            {# Define section styles with default values #}
            {% set containerStyle = sectionStyles.container | default("container mx-auto px-4 lg:px-8") %}
            {% set contentWrapperStyle = sectionStyles.contentWrapper | default("flex flex-col lg:flex-row lg:items-start lg:gap-8") %}
            {% set textContentStyle = sectionStyles.textContent | default("w-full lg:w-1/2 mb-6 lg:mb-0 text-center") %}
            {% set mediaContentStyle = sectionStyles.mediaContent | default("w-full lg:w-1/2") %}
            {% set iconWrapperStyle = sectionStyles.iconWrapper | default("flex justify-center my-0") %}
            {% set contentContainerStyle = sectionStyles.contentContainer | default("mt-0 max-w-[40rem] mx-auto") %}
            {% set buttonWrapperStyle = sectionStyles.buttonWrapper | default("mt-6 flex justify-center") %}

            {# Create unique ID for the section from name #}
            {% set sectionId = "section-" ~ (sectionData.name | replace(" ", "-") | lower) %}

            <section 
                class="{{ globalStyle }} {{ variant }} {{ options.class | default('') }} py-12 relative overflow-visible" 
                data-section-carousel="{{ sectionData.name }}" 
                id="{{ sectionId }}" 
                data-reversed="{{ reversed | string }}" 
                style="{% if sectionData.hasBeigeBg %}background-color: var(--ma-nautic-beige);{% endif %}"
            >
                {# Left wave - Même que section-hero #}
                {% if sectionData["image-left"] and options.images %}
                    <div class="absolute left-0 top-1/2 transform -translate-y-1/2 hidden min-[900px]:block z-20 pointer-events-none">
                        {% set leftWave = null %}
                        {% for image in options.images.images %}
                            {% if image.name == sectionData["image-left"] %}
                                {% set leftWave = image %}
                            {% endif %}
                        {% endfor %}

                        {% if leftWave %}
                            {# Use size variant defined in images.json #}
                            {% set imageVariantLeft = options.images.variants[leftWave.size] | default('w-auto h-auto') %}
                            <img src="{{ leftWave.src }}" alt="{{ leftWave.alt }}" class="{{ options.images.globalStyle }} {{ imageVariantLeft }} max-w-none wave-image">
                        {% endif %}
                    </div>
                {% endif %}

                {# Right wave - Même que section-hero #}
                {% if sectionData["image-right"] and options.images %}
                    <div class="absolute right-0 top-1/2 transform -translate-y-1/2 hidden min-[900px]:block z-20 pointer-events-none">
                        {% set rightWave = null %}
                        {% for image in options.images.images %}
                            {% if image.name == sectionData["image-right"] %}
                                {% set rightWave = image %}
                            {% endif %}
                        {% endfor %}

                        {% if rightWave %}
                            {# Use size variant defined in images.json #}
                            {% set imageVariantRight = options.images.variants[rightWave.size] | default('w-auto h-auto') %}
                            <img src="{{ rightWave.src }}" alt="{{ rightWave.alt }}" class="{{ options.images.globalStyle }} {{ imageVariantRight }} max-w-none wave-image">
                        {% endif %}
                    </div>
                {% endif %}

                <div class="{{ containerStyle }} relative z-10">
                    {# Mobile layout - Utilisation de la même structure de grille que section-card #}
                    <div class="lg:hidden pt-8 grid grid-cols-6">
                        <div class="col-start-2 col-span-4">
                            {# Super Heading (section title with underscore) #}
                            {% if sectionData.superHeading and options.headings %}
                                <div class="text-center mb-6">
                                    {{ renderHeading({
                                        name: sectionData.superHeading,
                                        datas: options.headings,
                                        class: "mb-6 mt-8 ma-nautic-section-title max-w-[40rem] mx-auto"
                                    }) }}
                                </div>
                            {% endif %}

                            {# Icon if present - Using data-svg-src for JS loading #}
                            {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
                                <div class="{{ iconWrapperStyle }} mb-6">
                                    {% set iconData = null %}
                                    {% for icon in options.icons.icons %}
                                        {% if icon.name == sectionData.iconName %}
                                            {% set iconData = icon %}
                                        {% endif %}
                                    {% endfor %}

                                    {% if iconData %}
                                        <span data-svg-src="{{ iconData.path }}" data-svg-width="{{ iconSize }}" data-svg-height="{{ iconSize }}" class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                                            <!-- SVG will be loaded here -->
                                        </span>
                                    {% endif %}
                                </div>
                            {% endif %}

                            {% if not sectionData.heading and sectionData.content %}
                                <div style="text-align: left; width: 100%; margin-top: 0; padding-top: 0;">
                                    <div class="text-justify mt-0 pt-0 [&_strong]:font-normal">
                                        {{ sectionData.content | safe }}
                                    </div>
                                </div>
                            {% else %}
                                {# Heading - Aligned left with style #}
                                {% if sectionData.heading and options.headings %}
                                    <div style="text-align: left;">
                                        {{ renderHeading({
                                            name: sectionData.heading,
                                            datas: options.headings,
                                            class: "mb-4 mt-0 max-w-[40rem]"
                                        }) }}
                                    </div>
                                {% endif %}
                          
                                {# Content with normal margins #}
                                {% if sectionData.content %}
                                    <div class="{{ contentContainerStyle }} text-justify">
                                        {{ sectionData.content | safe }}
                                    </div>
                                {% endif %}
                            {% endif %}

                            {# Primary Link #}
                            {% if sectionData.primaryLink and options.links %}
                                <div class="{{ buttonWrapperStyle }}">
                                    {{ renderLink({
                                        name: sectionData.primaryLink,
                                        datas: options.links
                                    }) }}
                                </div>
                            {% endif %}
                            
                            {# Carousel pour mobile avec des marges similaires à section-card #}
                            <div class="mt-8">
                                {{ renderCarousel({
                                    name: sectionData.carouselName,
                                    datas: options.carousels,
                                    images: options.images,
                                    buttons: options.buttons,
                                    class: "ma-nautic-carousel w-full",
                                    theme: carouselTheme,
                                    reversed: reversed
                                }) }}
                            </div>
                        </div>
                    </div>

                    {# Desktop layout #}
                    <div class="hidden lg:block">
                        {# Centered top elements (superHeading and icon) #}
                        <div class="text-center mb-8">
                            {# Super Heading #}
                            {% if sectionData.superHeading and options.headings %}
                                {{ renderHeading({
                                    name: sectionData.superHeading,
                                    datas: options.headings,
                                    class: "mb-6 ma-nautic-section-title max-w-[40rem] mx-auto"
                                }) }}
                            {% endif %}

                            {# Icon if present #}
                            {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
                                <div class="{{ iconWrapperStyle }} mt-4">
                                    {% set iconData = null %}
                                    {% for icon in options.icons.icons %}
                                        {% if icon.name == sectionData.iconName %}
                                            {% set iconData = icon %}
                                        {% endif %}
                                    {% endfor %}

                                    {% if iconData %}
                                        <span data-svg-src="{{ iconData.path }}" data-svg-width="{{ iconSize }}" data-svg-height="{{ iconSize }}" class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                                            <!-- SVG will be loaded here -->
                                        </span>
                                    {% endif %}
                                </div>
                            {% endif %}
                        </div>

                        {# Two columns layout #}
                        <div class="container mx-auto grid grid-cols-6">
                            <div class="col-start-2 col-span-4">
                                <div class="flex {% if reversed %}flex-row-reverse{% else %}flex-row{% endif %} items-start h-auto">
                                    {# Content column #}
                                    <div class="{{ textContentStyle }} flex flex-col w-1/2">
                                        {% if not sectionData.heading and sectionData.content %}
                                            <div style="text-align: left; width: 100%; margin-top: 0; padding-top: 0;">
                                                <div class="text-justify mt-0 pt-0 [&_strong]:font-normal">
                                                    {{ sectionData.content | safe }}
                                                </div>
                                            </div>
                                        {% else %}
                                            {# Heading - Aligned left with style #}
                                            {% if sectionData.heading and options.headings %}
                                                <div style="text-align: left; width: 100%;">
                                                    {{ renderHeading({
                                                        name: sectionData.heading,
                                                        datas: options.headings,
                                                        class: "mb-4 mt-0 max-w-[40rem]"
                                                    }) }}
                                                </div>
                                            {% endif %}
                                      
                                            {# Content with normal margins #}
                                            {% if sectionData.content %}
                                                <div class="{{ contentContainerStyle }} text-justify [&_strong]:font-normal">
                                                    {{ sectionData.content | safe }}
                                                </div>
                                            {% endif %}
                                        {% endif %}

                                        {# Primary Link #}
                                        {% if sectionData.primaryLink and options.links %}
                                            <div class="{{ buttonWrapperStyle }}">
                                                {{ renderLink({
                                                    name: sectionData.primaryLink,
                                                    datas: options.links
                                                }) }}
                                            </div>
                                        {% endif %}
                                    </div>

                                    {# Carousel column #}
                                    <div class="{{ mediaContentStyle }} flex items-start w-1/2 pt-0" data-reversed="{{ reversed | string }}">
                                        <div class="w-4/5 mx-auto mt-0">
                                            {{ renderCarousel({
                                                name: sectionData.carouselName,
                                                datas: options.carousels,
                                                images: options.images,
                                                buttons: options.buttons,
                                                class: "ma-nautic-carousel w-full",
                                                theme: carouselTheme,
                                                reversed: reversed
                                            }) }}
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </section>
        {% endif %}
    {% else %}
        <span class="text-red-500">Section Carousel data not found</span>
    {% endif %}
{% endmacro %}

{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "01-organisms/section-carousel.njk" import renderSectionCarousel %}

2. Call a specific section-carousel by its name
{{ renderSectionCarousel({ 
    name: "home_team", 
    datas: organisms["section-carousels"], 
    headings: atoms.headings, 
    links: atoms.links,
    icons: atoms.icons,
    carousels: organisms.carousels,
    buttons: atoms.buttons,
    images: atoms.images,
    reversed: false
}) }}

May your bugs be forever exiled to the shadow realm. 🧙‍♂️✨
#}