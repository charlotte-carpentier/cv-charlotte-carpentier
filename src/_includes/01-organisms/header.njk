{#
=========================
         HEADER          
=========================
#}

{% from "03-atoms/vector.njk" import renderVector %}
{% from "03-atoms/link.njk" import renderLink %}
{% from "03-atoms/icon.njk" import renderIcon %}

{% macro renderHeader(options) %}
  {% if options.datas %}
    {% set globalStyle = options.datas.globalStyle %}
    {% set containerStyle = options.datas.containerStyle %}
    {% set navStyle = options.datas.navStyle %}
    {% set menuContainerStyle = options.datas.menuContainerStyle %}
    {% set toggleButtonStyle = options.datas.variants.toggleButton.default %}
    {% set toggleButtonIcon = options.datas.variants.toggleButton.icon %}
    {% set toggleButtonIconStyle = options.datas.variants.toggleButton.iconStyle | default('') %}
    {% set dropdownMenuStyle = options.datas.variants.dropdownMenu.default %}
    {% set menuListStyle = options.datas.variants.menuList.default %}
    
    {% set headerData = null %}
    {% if options.name %}
      {% for headerSet in options.datas.headers %}
        {% if headerSet.name == options.name %}
          {% set headerData = headerSet %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {% if not headerData %}
      {% set headerData = options.datas.headers[0] %}
    {% endif %}
    
    <header class="{{ globalStyle }} {{ options.class | default('') }}">
      <div class="{{ containerStyle }}">
        <nav class="{{ navStyle }}">
          {# Logo #}
          {{ renderVector({ name: headerData.logo, datas: options.vectors }) }}

          {# Menu #}
          <div class="{{ menuContainerStyle }}">
            <div class="{{ toggleButtonStyle }}">
              {# Utilisation de data-svg-src pour charger le SVG via le svg-loader #}
              {% set iconData = null %}
              {% if options.icons %}
                {% for icon in options.icons.icons %}
                  {% if icon.name == toggleButtonIcon %}
                    {% set iconData = icon %}
                  {% endif %}
                {% endfor %}
              {% endif %}
              
              {% if iconData %}
                <span data-svg-src="{{ iconData.path }}" class="inline-flex items-center justify-center w-6 h-6 {{ toggleButtonIconStyle }}">
                  <!-- SVG will be loaded here -->
                </span>
              {% else %}
                {# Fallback - ic√¥ne burger en inline SVG si l'ic√¥ne n'est pas trouv√©e #}
                <span class="inline-flex items-center justify-center w-6 h-6 {{ toggleButtonIconStyle }}">
                  <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="3" y1="12" x2="21" y2="12"></line><line x1="3" y1="6" x2="21" y2="6"></line><line x1="3" y1="18" x2="21" y2="18"></line></svg>
                </span>
              {% endif %}
            </div>

            <div class="{{ dropdownMenuStyle }}">
              <ul role="list" class="{{ menuListStyle }}">
                {% for linkName in headerData.links %}
                  <li>
                    {{ renderLink({ name: linkName, datas: options.links, dataNavLink: true }) }}
                  </li>
                {% endfor %}
              </ul>
            </div>
          </div>
        </nav>
      </div>
    </header>

    {# Include external JS files #}
    <script src="/js/organisms/header-menu.js"></script>
    <script src="/js/utils/svg-loader.js"></script>
  {% else %}
    <span class="text-red-500">Header data not found</span>
  {% endif %}
{% endmacro %}

{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "01-organisms/header.njk" import renderHeader %}

2. Call the header component with a specific name
{{ renderHeader({ 
    name: "main",
    datas: organisms.headers,
    vectors: atoms.vectors,
    links: atoms.links,
    icons: atoms.icons
}) }}

3. Using custom styles
{{ renderHeader({ 
    name: "main",
    datas: organisms.headers,
    vectors: atoms.vectors,
    links: atoms.links,
    icons: atoms.icons,
    class: "my-custom-header-class"
}) }}

4. Structure of headers.json explained in file
   Follow similar pattern as breadcrumbs.json

Guided by fate, or just really good UI? üß≠‚ú®
#}