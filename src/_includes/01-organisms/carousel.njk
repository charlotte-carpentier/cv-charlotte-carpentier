{# 
===========================
        CAROUSEL
===========================
#}

{% macro renderCarousel(options) %}
  {# Get default global styling and theme #}
  {% set globalStyle = (options.datas and options.datas.globalStyle) | default('w-full') %}
  {% set theme = options.theme | default('auto') %}
  
  {# Determine if data comes from Markdown file or JSON #}
  {% set isMarkdownSource = options.markdown | default(false) %}
  
  {# Get aspect ratio option with default to square (100%) #}
  {% set aspectRatio = options.aspectRatio | default('100%') %}
  
  {% set carouselData = null %}
  
  {# Markdown source #}
  {% if isMarkdownSource %}
    {# Get carousel data from markdown #}
    {% set carouselData = options.carousel %}
    {% set carouselId = "carousel-" ~ carouselData.name %}
    
    {# Look for global parameters for carousel-boat in JSON #}
    {% set boatDefaults = null %}
    {% if options.datas and options.datas.carousels %}
      {% for carousel in options.datas.carousels %}
        {% if carousel["carousel-boat"] is defined %}
          {% set boatDefaults = carousel["carousel-boat"] %}
        {% endif %}
      {% endfor %}
    {% endif %}
    
    {# Default values for options not specified in Markdown #}
    {% set autoplay = carouselData.autoplay | default((boatDefaults and boatDefaults.autoplay) | default(true)) %}
    {% set pauseOnHover = carouselData.pauseOnHover | default((boatDefaults and boatDefaults.pauseOnHover) | default(true)) %}
    {% set defaultObjectPosition = (boatDefaults and boatDefaults.objectPosition) | default('center') %}
    
    {# Add empty array to avoid errors if carousel is empty #}
    {% if not carouselData.images %}
      {% set carouselData = carouselData | merge({ images: [] }) %}
    {% endif %}
    
  {# JSON source #}
  {% else %}
    {# Find carousel by name in data #}
    {% for carousel in options.datas.carousels %}
      {% if carousel.name == options.name %}
        {% set carouselData = carousel %}
      {% endif %}
    {% endfor %}
    
    {% if carouselData %}
      {% set carouselId = "carousel-" ~ carouselData.name %}
      {% set autoplay = carouselData.autoplay %}
      {% set pauseOnHover = carouselData.pauseOnHover %}
      {% set defaultObjectPosition = 'center' %}
    {% endif %}
  {% endif %}
  
  {# Button source #}
  {% set prevButtonId = (options.datas and options.datas.buttons.prev) | default('carousel_prev') %}
  {% set nextButtonId = (options.datas and options.datas.buttons.next) | default('carousel_next') %}
  
  {% set prevButton = null %}
  {% set nextButton = null %}
  
  {# Find button configurations #}
  {% if options.buttons %}
    {% set buttonsArray = options.buttons.buttons | default(options.buttons) %}
    {% for button in buttonsArray %}
      {% if button.name == prevButtonId %}
        {% set prevButton = button %}
      {% endif %}
      {% if button.name == nextButtonId %}
        {% set nextButton = button %}
      {% endif %}
    {% endfor %}
  {% endif %}
  
  {# Extract button styles #}
  {% set prevButtonStyles = (options.datas and options.datas.variants and options.datas.variants.prevButton) | default({
    "containerSize": "w-10 h-10 md:w-12 md:h-12",
    "default": "rounded-full p-2 md:p-3 transition-colors duration-300",
    "iconStyle": "text-[theme(--ma-nautic-gold)]"
  }) %}
  
  {% set nextButtonStyles = (options.datas and options.datas.variants and options.datas.variants.nextButton) | default({
    "containerSize": "w-10 h-10 md:w-12 md:h-12",
    "default": "rounded-full p-2 md:p-3 transition-colors duration-300",
    "iconStyle": "text-[theme(--ma-nautic-gold)]"
  }) %}
  
  {# Combine styles for buttons #}
  {% set carouselPrevStyle = prevButtonStyles.containerSize ~ " " ~ prevButtonStyles.default %}
  {% set carouselNextStyle = nextButtonStyles.containerSize ~ " " ~ nextButtonStyles.default %}
  
  {% set prevIconStyle = prevButtonStyles.iconStyle | default("") %}
  {% set nextIconStyle = nextButtonStyles.iconStyle | default("") %}
  
  {% if carouselData %}
    {# Main carousel structure #}
    <div class="w-full">
      {# Carousel container - positioning context for all elements #}
      <div class="relative {{ options.class | default('') }}">
        {# Carousel content with overflow hidden #}
        <div 
          class="{{ globalStyle }} overflow-hidden"
          id="{{ carouselId }}"
          data-carousel="{{ carouselData.name }}"
          {% if autoplay %}data-autoplay="true"{% endif %}
          {% if pauseOnHover %}data-pause-on-hover="true"{% endif %}
          data-carousel-theme="{{ theme }}"
        >
          {# Container with aspect ratio maintained via padding-bottom - MODIFIED HERE #}
          <div class="relative w-full" style="padding-bottom: {{ aspectRatio }};">
            {# Carousel slides #}
            <div class="absolute inset-0 w-full h-full">
              {% for image in carouselData.images %}
                <div 
                  class="absolute inset-0 transition-opacity duration-500 ease-in-out {% if loop.first %}opacity-100{% else %}opacity-0{% endif %}"
                  data-carousel-item
                >
                  {# Find image in data #}
                  {% set imagesArray = options.images.images | default(options.images) %}
                  {% set foundImage = null %}
                  {% if imagesArray %}
                    {% for img in imagesArray %}
                      {% if img.name == image.name %}
                        {% set foundImage = img %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                  
                  {# Render image or placeholder #}
                  {% if foundImage %}
                    <img 
                      src="{{ foundImage.src }}" 
                      alt="{{ foundImage.alt | default(image.name) }}" 
                      class="w-full h-full object-cover"
                      style="object-position: {{ image.objectPosition | default(defaultObjectPosition) }};"
                      loading="lazy"
                    />
                  {% else %}
                    <div class="w-full h-full flex items-center justify-center bg-gray-200">
                      <span class="text-gray-500">Image {{ image.name }} non disponible</span>
                    </div>
                  {% endif %}
                </div>
              {% endfor %}
            </div>
          </div>
        </div>
        
        {# Navigation buttons #}
        <button 
          class="absolute left-[-48px] top-1/2 transform -translate-y-1/2 z-10 {{ carouselPrevStyle }} {{ prevButton.class | default('') }} flex items-center justify-center cursor-pointer"
          data-carousel-prev
          aria-label="Previous image"
        >
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="{{ prevIconStyle }} w-full h-full">
            <polyline points="15 18 9 12 15 6"></polyline>
          </svg>
        </button>
        
        <button 
          class="absolute right-[-48px] top-1/2 transform -translate-y-1/2 z-10 {{ carouselNextStyle }} {{ nextButton.class | default('') }} flex items-center justify-center cursor-pointer"
          data-carousel-next
          aria-label="Next image"
        >
          <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="{{ nextIconStyle }} w-full h-full">
            <polyline points="9 18 15 12 9 6"></polyline>
          </svg>
        </button>
        
        {# Indicators (dots) #}
        <div class="flex items-center justify-center mt-2 md:mt-4 space-x-1 md:space-x-2">
          {% for image in carouselData.images %}
            <button 
              class="w-2 h-2 md:w-3 md:h-3 rounded-full bg-[theme(--ma-nautic-beige)] carousel-indicator {% if loop.first %}carousel-indicator-active{% endif %} cursor-pointer"
              data-carousel-indicator="{{ loop.index0 }}"
              data-carousel-target="{{ carouselId }}"
              aria-label="Go to image {{ loop.index }}"
            ></button>
          {% endfor %}
        </div>
      </div>
    </div>
  {% else %}
    <span class="text-red-500">{% if isMarkdownSource %}Carousel data incomplete {% if options.carousel %}(name: {{ options.carousel.name }}){% endif %}{% else %}Carousel not found: {{ options.name }}{% endif %}</span>
  {% endif %}
    <script src="/js/organisms/carousel.js" defer></script>
{% endmacro %}

{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "01-organisms/carousel.njk" import renderCarousel %}

2. Call a specific carousel by its name
{{ renderCarousel({ 
    name: "carousel_1", 
    datas: organisms.carousels,
    images: atoms.images,
    buttons: atoms.buttons
}) }}

3. For displaying a carousel from a Markdown file (MD source)
{% set carousel_alba = null %}
{% for carousel_item in collections.carousel %}
  {% if carousel_item.data.name == "carousel_alba" and not carousel_alba %}
    {% set carousel_alba = carousel_item %}
  {% endif %}
{% endfor %}

{% if carousel_alba %}
  {{ renderCarousel({ 
      markdown: true,
      carousel: carousel_alba.data,
      datas: organisms.carousels,
      images: atoms.images,
      buttons: atoms.buttons
  }) }}
{% endif %}

4. For displaying the boat carousel on its page
{% set boat_name = page.fileSlug | replace("boat_", "") %}
{% set carousel_name = "carousel_" + boat_name %}
{% set boat_carousel = null %}

{% for carousel_item in collections.carousel %}
  {% if carousel_item.data.name == carousel_name and not boat_carousel %}
    {% set boat_carousel = carousel_item %}
  {% endif %}
{% endfor %}

{% if boat_carousel %}
  {{ renderCarousel({ 
      markdown: true,
      carousel: boat_carousel.data,
      datas: organisms.carousels,
      images: atoms.images,
      buttons: atoms.buttons
  }) }}
{% endif %}

May your bugs be forever exiled to the shadow realm. 🧙‍♂️✨
#}