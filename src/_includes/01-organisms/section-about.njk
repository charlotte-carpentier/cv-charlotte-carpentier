{#
=========================
      SECTION ABOUT        
=========================
#}

{% from "03-atoms/heading.njk" import renderHeading %}
{% from "03-atoms/link.njk" import renderLink %}
{% from "03-atoms/icon.njk" import renderIcon %}
{% from "03-atoms/button.njk" import renderButton %}
{% from "01-organisms/carousel.njk" import renderCarousel %}

{% macro renderSectionAbout(options) %}
  {% if options.datas %}
    {% set globalStyle = options.datas.globalStyle | default("section-about") %}
    {% set sectionStyles = options.datas.sectionStyles | default({}) %}
    
    {% set sectionData = null %}
    {% if options.name %}
      {% for section in options.datas.sections %}
        {% if section.name == options.name %}
          {% set sectionData = section %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {% if not sectionData %}
      {% set sectionData = options.datas.sections[0] %}
    {% endif %}
    
    {% set variant = options.datas.variants[sectionData.variant] | default(options.datas.variants.default) %}
    
    {# Extraction des styles d'icônes avec valeurs par défaut #}
    {% set iconStyle = "" %}
    {% set iconContainerSize = "" %}
    {% set iconDefault = "" %}
    {% if sectionData.iconVariant and options.datas.variants[sectionData.iconVariant] %}
      {% set iconDefault = options.datas.variants[sectionData.iconVariant].default | default('mx-auto') %}
      {% set iconStyle = options.datas.variants[sectionData.iconVariant].iconStyle | default('text-[theme(--ma-nautic-teal)]') %}
      {% set iconContainerSize = options.datas.variants[sectionData.iconVariant].containerSize | default('w-12 h-12 lg:w-16 lg:h-16') %}
    {% else %}
      {% set iconDefault = 'mx-auto' %}
      {% set iconStyle = 'text-[theme(--ma-nautic-teal)]' %}
      {% set iconContainerSize = 'w-12 h-12 lg:w-16 lg:h-16' %}
    {% endif %}
    
    {# Extraction des styles de flèche avec valeurs par défaut #}
    {% set arrowStyle = "" %}
    {% set arrowIconStyle = "" %}
    {% set arrowContainerSize = "" %}
    {% if sectionData.scrollArrowIconVariant and options.datas.variants[sectionData.scrollArrowIconVariant] %}
      {% set arrowStyle = options.datas.variants[sectionData.scrollArrowIconVariant].default | default('mx-auto') %}
      {% set arrowIconStyle = options.datas.variants[sectionData.scrollArrowIconVariant].iconStyle | default('text-[theme(--ma-nautic-beige)]') %}
      {% set arrowContainerSize = options.datas.variants[sectionData.scrollArrowIconVariant].containerSize | default('w-16 h-16') %}
    {% else %}
      {% set arrowStyle = 'mx-auto' %}
      {% set arrowIconStyle = 'text-[theme(--ma-nautic-beige)]' %}
      {% set arrowContainerSize = 'w-16 h-16' %}
    {% endif %}
    
    {# Définition des styles de section avec valeurs par défaut #}
    {% set containerStyle = sectionStyles.container | default("container mx-auto px-4 lg:px-8") %}
    {% set contentWrapperStyle = sectionStyles.contentWrapper | default("flex flex-col lg:flex-row lg:items-start lg:gap-8") %}
    {% set textContentStyle = sectionStyles.textContent | default("w-full lg:w-1/2 mb-6 lg:mb-0 text-center") %}
    {% set mediaContentStyle = sectionStyles.mediaContent | default("w-full lg:w-1/2") %}
    {% set buttonContainerStyle = sectionStyles.buttonContainer | default("flex flex-wrap gap-4 mt-6") %}
    {% set carouselWrapperStyle = sectionStyles.carouselWrapper | default("relative") %}
    {% set mainTitleWrapperStyle = sectionStyles.mainTitleWrapper | default("w-full bg-[theme(--ma-nautic-beige)] py-6 text-center mb-8 flex items-center justify-center min-h-[120px] relative") %}
    {% set mainTitleStyle = sectionStyles.mainTitleStyle | default("font-[theme(--ma-nautic-font-display)] text-[theme(--ma-nautic-gold)] text-4xl lg:text-5xl") %}
    {% set topTitleWrapperStyle = sectionStyles.topTitleWrapper | default("text-center mb-8") %}
    {% set topTitleStyle = sectionStyles.topTitleStyle | default("ma-nautic-hero-heading text-[theme(--ma-nautic-beige)]") %}
    {% set iconWrapperStyle = sectionStyles.iconWrapper | default("flex justify-center my-0") %}
    {% set contentContainerStyle = sectionStyles.contentContainer | default("mt-4") %}
    {% set contentContainerDesktopStyle = sectionStyles.contentContainerDesktop | default("mt-4 text-center") %}
    {% set buttonWrapperStyle = sectionStyles.buttonWrapper | default("mt-6 flex justify-center") %}
    
    <div class="relative">
      {# Titre principal (bande en haut) #}
      {% if sectionData.mainTitle and options.headings %}
        <div class="{{ mainTitleWrapperStyle }}" style="border-bottom: none;">
          {{ renderHeading({
            name: sectionData.mainTitle,
            datas: options.headings,
            class: mainTitleStyle ~ " m-0 p-0"
          }) }}
        </div>
      {% endif %}
      
      {# Flèche de défilement #}
      {% if sectionData.scrollArrowIcon and options.icons %}
        <div class="absolute left-1/2 top-[120px] transform -translate-x-1/2 translate-y-[-33%] z-20">
          {% set arrowIconData = null %}
          {% if options.icons %}
            {% for icon in options.icons.icons %}
              {% if icon.name == sectionData.scrollArrowIcon %}
                {% set arrowIconData = icon %}
              {% endif %}
            {% endfor %}
          {% endif %}
          
          {% if arrowIconData %}
            <span data-svg-src="{{ arrowIconData.path }}" class="{{ arrowStyle }} {{ arrowContainerSize }} {{ arrowIconStyle }}">
              <!-- SVG will be loaded here -->
            </span>
          {% else %}
            {{ renderIcon({
              name: sectionData.scrollArrowIcon,
              datas: options.icons,
              class: arrowStyle ~ " " ~ arrowContainerSize ~ " " ~ arrowIconStyle
            }) }}
          {% endif %}
        </div>
      {% endif %}
      
      <section class="{{ globalStyle }} {{ variant }} {{ options.class | default('') }} pb-12 border-t-0" data-section-about="{{ sectionData.name }}">
        <div class="{{ containerStyle }}">
          {% if sectionData.topTitle %}
            <div class="{{ topTitleWrapperStyle }}">
              <h1 class="{{ topTitleStyle }}">{{ sectionData.topTitle }}</h1>
            </div>
          {% endif %}
          
          {# Mobile layout (flex column) - Éléments centrés - Visible jusqu'au breakpoint lg #}
          <div class="lg:hidden text-center px-6">
            {# Super Heading (section title with underscore) #}
            {% if sectionData.superHeading and options.headings %}
              {{ renderHeading({
                name: sectionData.superHeading,
                datas: options.headings,
                class: "mb-6 mt-8 ma-nautic-section-title"
              }) }}
            {% endif %}
            
            {# Main Heading (title) #}
            {% if sectionData.heading and options.headings %}
              {{ renderHeading({
                name: sectionData.heading,
                datas: options.headings
              }) }}
            {% endif %}
            
            {# Icon if present #}
            {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
              <div class="{{ iconWrapperStyle }}">
                {% set iconData = null %}
                {% if options.icons %}
                  {% for icon in options.icons.icons %}
                    {% if icon.name == sectionData.iconName %}
                      {% set iconData = icon %}
                    {% endif %}
                  {% endfor %}
                {% endif %}
                
                {% if iconData %}
                  <span data-svg-src="{{ iconData.path }}" class="{{ iconDefault }} {{ iconContainerSize }} {{ iconStyle }}">
                    <!-- SVG will be loaded here -->
                  </span>
                {% else %}
                  {{ renderIcon({
                    name: sectionData.iconName,
                    datas: options.icons,
                    class: iconDefault ~ " " ~ iconContainerSize ~ " " ~ iconStyle
                  }) }}
                {% endif %}
              </div>
            {% endif %}
            
            {# Content #}
            {% if sectionData.content %}
              <div class="{{ contentContainerStyle }} text-center">
                {{ sectionData.content | safe }}
              </div>
            {% endif %}
            
            {# Primary Button (Contact) #}
            {% if sectionData.primaryButton and options.buttons %}
              <div class="{{ buttonWrapperStyle }}">
                {{ renderButton({
                  name: sectionData.primaryButton,
                  datas: options.buttons
                }) }}
              </div>
            {% endif %}
            
            {# Primary Link (Contact) #}
            {% if sectionData.primaryLink and options.links %}
              <div class="{{ buttonWrapperStyle }}">
                {{ renderLink({
                  name: sectionData.primaryLink,
                  datas: options.links
                }) }}
              </div>
            {% endif %}
          </div>
          
          {# Desktop layout (two columns) - Visible à partir du breakpoint lg #}
          <div class="hidden lg:flex {{ contentWrapperStyle }} items-center h-[600px]">
            {# Left column: Super Heading, Main Heading, Icon, Content and Button #}
            <div class="{{ textContentStyle }} h-full flex flex-col items-center justify-center text-center px-16">
              {# Super Heading (section title with underscore) #}
              {% if sectionData.superHeading and options.headings %}
                {{ renderHeading({
                  name: sectionData.superHeading,
                  datas: options.headings,
                  class: "mb-6 mt-8 ma-nautic-section-title"
                }) }}
              {% endif %}
              
              {# Main Heading (title) #}
              {% if sectionData.heading and options.headings %}
                {{ renderHeading({
                  name: sectionData.heading,
                  datas: options.headings
                }) }}
              {% endif %}
              
              {# Icon if present #}
              {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
                <div class="{{ iconWrapperStyle }}">
                  {% set iconData = null %}
                  {% if options.icons %}
                    {% for icon in options.icons.icons %}
                      {% if icon.name == sectionData.iconName %}
                        {% set iconData = icon %}
                      {% endif %}
                    {% endfor %}
                  {% endif %}
                  
                  {% if iconData %}
                    <span data-svg-src="{{ iconData.path }}" class="{{ iconDefault }} {{ iconContainerSize }} {{ iconStyle }}">
                      <!-- SVG will be loaded here -->
                    </span>
                  {% else %}
                    {{ renderIcon({
                      name: sectionData.iconName,
                      datas: options.icons,
                      class: iconDefault ~ " " ~ iconContainerSize ~ " " ~ iconStyle
                    }) }}
                  {% endif %}
                </div>
              {% endif %}
              
              {# Content #}
              {% if sectionData.content %}
                <div class="{{ contentContainerDesktopStyle }}">
                  {{ sectionData.content | safe }}
                </div>
              {% endif %}
              
              {# Primary Button #}
              {% if sectionData.primaryButton and options.buttons %}
                <div class="{{ buttonWrapperStyle }}">
                  {{ renderButton({
                    name: sectionData.primaryButton,
                    datas: options.buttons
                  }) }}
                </div>
              {% endif %}
              
              {# Primary Link #}
              {% if sectionData.primaryLink and options.links %}
                <div class="{{ buttonWrapperStyle }}">
                  {{ renderLink({
                    name: sectionData.primaryLink,
                    datas: options.links
                  }) }}
                </div>
              {% endif %}
            </div>
            
            {# Right column: Carousel - Réduit à 75% de sa taille d'origine #}
            <div class="{{ mediaContentStyle }} h-full flex items-center justify-center px-16">
              {% if sectionData.hasCarousel and sectionData.carouselName %}
                <div class="w-4/5 mx-auto">
                  {{ renderCarousel({
                    name: sectionData.carouselName,
                    datas: options.carousels,
                    images: options.images,
                    buttons: options.buttons,
                    class: "ma-nautic-carousel w-full"
                  }) }}
                </div>
              {% endif %}
            </div>
          </div>
          
          {# Carousel pour mobile - Réduit à 75% de sa taille d'origine #}
          {% if sectionData.hasCarousel and sectionData.carouselName %}
            <div class="lg:hidden mt-8">
              <div class="w-4/5 mx-auto">
                {{ renderCarousel({
                  name: sectionData.carouselName,
                  datas: options.carousels,
                  images: options.images,
                  buttons: options.buttons,
                  class: "ma-nautic-carousel"
                }) }}
              </div>
            </div>
          {% endif %}
        </div>
      </section>
    </div>
  {% else %}
    <span class="text-red-500">Section About data not found</span>
  {% endif %}
{% endmacro %}


{#
============================
Summon MA-NAUTIC Components Wisely
============================

1. Import the macro at the top of your page
{% from "01-organisms/section-about.njk" import renderSectionAbout %}

2. Call the component with the required data
{{ renderSectionAbout({ 
    name: "ma_nautic_about", 
    datas: organisms["section-abouts"], 
    headings: atoms.headings, 
    links: atoms.links,
    icons: atoms.icons,
    carousels: organisms.carousels,
    buttons: atoms.buttons,
    images: atoms.images
}) }}

3. Using custom styles
{{ renderSectionAbout({ 
    name: "ma_nautic_about", 
    datas: organisms["section-abouts"], 
    headings: atoms.headings, 
    links: atoms.links,
    icons: atoms.icons,
    carousels: organisms.carousels,
    buttons: atoms.buttons,
    images: atoms.images,
    class: "my-custom-section-class" 
}) }}
#}