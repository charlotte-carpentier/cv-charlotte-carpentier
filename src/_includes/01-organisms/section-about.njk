{# 
=========================
      SECTION ABOUT        
=========================
#}

{% from "03-atoms/heading.njk" import renderHeading %}
{% from "03-atoms/link.njk" import renderLink %}
{% from "03-atoms/icon.njk" import renderIcon %}
{% from "03-atoms/button.njk" import renderButton %}
{% from "01-organisms/carousel.njk" import renderCarousel %}

{% macro renderSectionAbout(options) %}
  {# Check if data is provided #}
  {% if options.datas %}
    {# Get styles and configuration #}
    {% set globalStyle = options.datas.globalStyle | default("section-about") %}
    {% set sectionStyles = options.datas.sectionStyles | default({}) %}
    {% set reversed = options.reversed | default(false) %}
    
    {# Determine carousel theme based on section name #}
    {% if options.name == "ma_nautic_about" %}
      {% set carouselTheme = "light" %}
    {% else %}
      {% if reversed %}
        {% set carouselTheme = "light" %}
      {% else %}
        {% set carouselTheme = "dark" %}
      {% endif %}
    {% endif %}

    {# Find specific section configuration #}
    {% set sectionData = null %}
    {% if options.name %}
      {% for section in options.datas.sections %}
        {% if section.name == options.name %}
          {% set sectionData = section %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {# Fallback to first section if not found #}
    {% if not sectionData %}
      {% set sectionData = options.datas.sections[0] %}
    {% endif %}

    {# Get variant styling #}
    {% set variant = options.datas.variants[sectionData.variant] | default(options.datas.variants.default) %}

    {# Find scroll button if defined #}
    {% set scrollButton = null %}
    {% if sectionData.scrollArrowButton and options.buttons %}
      {% for button in options.buttons.buttons %}
        {% if button.name == sectionData.scrollArrowButton %}
          {% set scrollButton = button %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {# Extract scroll arrow styles #}
    {% set arrowStyle = "" %}
    {% set arrowButtonStyle = "" %}
    {% set arrowContainerSize = "" %}
    {% if sectionData.scrollArrowButtonVariant and options.datas.variants[sectionData.scrollArrowButtonVariant] %}
      {% set arrowStyle = options.datas.variants[sectionData.scrollArrowButtonVariant].default | default('mx-auto') %}
      {% set arrowButtonStyle = options.datas.variants[sectionData.scrollArrowButtonVariant].iconStyle | default('text-[theme(--ma-nautic-beige)]') %}
      {% set arrowContainerSize = options.datas.variants[sectionData.scrollArrowButtonVariant].containerSize | default('w-16 h-16') %}
    {% else %}
      {% set arrowStyle = 'mx-auto' %}
      {% set arrowButtonStyle = 'text-[theme(--ma-nautic-beige)]' %}
      {% set arrowContainerSize = 'w-16 h-16' %}
    {% endif %}

    {# Extract icon styles with default values #}
    {% set iconStyle = "" %}
    {% set iconContainerSize = "" %}
    {% set iconDefault = "" %}
    {% set iconSize = "32" %}
    {% if sectionData.iconVariant and options.datas.variants[sectionData.iconVariant] %}
      {% set iconDefault = options.datas.variants[sectionData.iconVariant].default | default('mx-auto') %}
      {% set iconStyle = options.datas.variants[sectionData.iconVariant].iconStyle | default('text-[theme(--ma-nautic-teal)]') %}
      {% set iconContainerSize = options.datas.variants[sectionData.iconVariant].containerSize | default('w-12 h-12 lg:w-16 lg:h-16') %}
      {% set iconSize = options.datas.variants[sectionData.iconVariant].iconSize | default('32') %}
    {% else %}
      {% set iconDefault = 'mx-auto' %}
      {% set iconStyle = 'text-[theme(--ma-nautic-teal)]' %}
      {% set iconContainerSize = 'w-12 h-12 lg:w-16 lg:h-16' %}
    {% endif %}

    {# Define section styles with default values #}
    {% set containerStyle = sectionStyles.container | default("container mx-auto px-4 lg:px-8") %}
    {% set contentWrapperStyle = sectionStyles.contentWrapper | default("flex flex-col lg:flex-row lg:items-start lg:gap-8") %}
    {% set textContentStyle = sectionStyles.textContent | default("w-full lg:w-1/2 mb-6 lg:mb-0 text-center") %}
    {% set mediaContentStyle = sectionStyles.mediaContent | default("w-full lg:w-1/2") %}
    {% set buttonContainerStyle = sectionStyles.buttonContainer | default("flex flex-wrap gap-4 mt-6") %}
    {% set carouselWrapperStyle = sectionStyles.carouselWrapper | default("relative") %}
    {% set mainTitleWrapperStyle = sectionStyles.mainTitleWrapper | default("w-full bg-[theme(--ma-nautic-beige)] py-6 pt-12 text-center mb-8 flex items-center justify-center min-h-[120px] relative") %}
    {% set mainTitleStyle = sectionStyles.mainTitleStyle | default("font-[theme(--ma-nautic-font-display)] text-[theme(--ma-nautic-gold)] text-4xl lg:text-5xl") %}
    {% set topTitleWrapperStyle = sectionStyles.topTitleWrapper | default("text-center mb-8") %}
    {% set topTitleStyle = sectionStyles.topTitleStyle | default("ma-nautic-hero-heading text-[theme(--ma-nautic-beige)]") %}
    {% set iconWrapperStyle = sectionStyles.iconWrapper | default("flex justify-center my-0") %}
    {% set contentContainerStyle = sectionStyles.contentContainer | default("mt-4 max-w-[40rem] mx-auto") %}
    {% set contentContainerDesktopStyle = sectionStyles.contentContainerDesktop | default("mt-4 text-center max-w-[40rem] mx-auto") %}
    {% set buttonWrapperStyle = sectionStyles.buttonWrapper | default("mt-6 flex justify-center") %}
    {% set scrollArrowWrapperStyle = sectionStyles.scrollArrowWrapper | default("absolute left-1/2 bottom-0 transform -translate-x-1/2 translate-y-[75%] z-20") %}

    {# Create unique ID for the section from name #}
    {% set sectionId = "section-" ~ (sectionData.name | replace(" ", "-") | lower) %}

    <div class="relative">
      {# Main title (top band) #}
      {% if sectionData.mainTitle and options.headings %}
        <div class="{{ mainTitleWrapperStyle }} ma-nautic-main" style="border-bottom: none;" data-reversed="{{ reversed | string }}">
          {{ renderHeading({
            name: sectionData.mainTitle,
            datas: options.headings,
            class: mainTitleStyle ~ " m-0 p-0 max-w-[40rem] mx-auto"
          }) }}

          {# Scroll button positioned at bottom of mainTitle #}
          {% if scrollButton %}
            <div class="{{ scrollArrowWrapperStyle }}">
              <a href="#{{ sectionId }}" class="ma-nautic-scroll-arrow {{ arrowStyle }}" aria-label="Défiler vers le contenu">
                {% if scrollButton.icon and options.icons %}
                  {% set arrowIconData = null %}
                  {% for icon in options.icons.icons %}
                    {% if icon.name == scrollButton.icon %}
                      {% set arrowIconData = icon %}
                    {% endif %}
                  {% endfor %}

                  {% if arrowIconData %}
                    <span data-svg-src="{{ arrowIconData.path }}" data-svg-width="{{ iconSize }}" data-svg-height="{{ iconSize }}" class="inline-flex items-center justify-center {{ arrowContainerSize }} {{ arrowButtonStyle }}">
                      <!-- SVG will be loaded here -->
                    </span>
                  {% else %}
                    <span class="inline-flex items-center justify-center {{ arrowContainerSize }} {{ arrowButtonStyle }}">↓</span>
                  {% endif %}
                {% else %}
                  <span class="inline-flex items-center justify-center {{ arrowContainerSize }} {{ arrowButtonStyle }}">↓</span>
                {% endif %}
              </a>
            </div>
          {% endif %}
        </div>
      {% endif %}

      <section class="{{ globalStyle }} {{ variant }} {{ options.class | default('') }} pb-12 border-t-0" data-section-about="{{ sectionData.name }}" id="{{ sectionId }}" data-reversed="{{ reversed | string }}">
        <div class="{{ containerStyle }}">
          {% if sectionData.topTitle %}
            <div class="{{ topTitleWrapperStyle }}">
              <h1 class="{{ topTitleStyle }} max-w-[40rem] mx-auto">{{ sectionData.topTitle }}</h1>
            </div>
          {% endif %}

          {# Mobile layout (flex column) - Centered elements - Visible until lg breakpoint #}
          <div class="lg:hidden text-center px-6 pt-8">
            {# Super Heading (section title with underscore) #}
            {% if sectionData.superHeading and options.headings %}
              {{ renderHeading({
                name: sectionData.superHeading,
                datas: options.headings,
                class: "mb-6 mt-8 ma-nautic-section-title max-w-[40rem] mx-auto"
              }) }}
            {% endif %}

            {# Main Heading (title) #}
            {% if sectionData.heading and options.headings %}
              {{ renderHeading({
                name: sectionData.heading,
                datas: options.headings,
                class: "max-w-[40rem] mx-auto"
              }) }}
            {% endif %}

            {# Icon if present - Using data-svg-src for JS loading #}
            {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
              <div class="{{ iconWrapperStyle }}">
                {% set iconData = null %}
                {% for icon in options.icons.icons %}
                  {% if icon.name == sectionData.iconName %}
                    {% set iconData = icon %}
                  {% endif %}
                {% endfor %}

                {% if iconData %}
                  <span data-svg-src="{{ iconData.path }}" data-svg-width="{{ iconSize }}" data-svg-height="{{ iconSize }}" class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                    <!-- SVG will be loaded here -->
                  </span>
                {% else %}
                  <span class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                    <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="{{ iconSize }}" height="{{ iconSize }}" fill="currentColor"><circle cx="12" cy="12" r="10"></circle></svg>
                  </span>
                {% endif %}
              </div>
            {% endif %}

            {# Content #}
            {% if sectionData.content %}
              <div class="{{ contentContainerStyle }} text-center">
                {{ sectionData.content | safe }}
              </div>
            {% endif %}

            {# Primary Link #}
            {% if sectionData.primaryLink and options.links %}
              <div class="{{ buttonWrapperStyle }}">
                {{ renderLink({
                  name: sectionData.primaryLink,
                  datas: options.links
                }) }}
              </div>
            {% endif %}
          </div>

          {# Desktop layout (two columns) - Visible from lg breakpoint #}
          {% if not reversed %}
          <div class="hidden lg:flex lg:flex-row items-center h-[600px] {{ contentWrapperStyle | replace('lg:flex-row', '') }}">
            {# Left column: Super Heading, Main Heading, Icon, Content and Button #}
            <div class="{{ textContentStyle }} h-full flex flex-col items-center justify-center text-center px-8">
              {# Super Heading (section title with underscore) #}
              {% if sectionData.superHeading and options.headings %}
                {{ renderHeading({
                  name: sectionData.superHeading,
                  datas: options.headings,
                  class: "mb-6 mt-8 ma-nautic-section-title max-w-[40rem] mx-auto"
                }) }}
              {% endif %}

              {# Main Heading (title) #}
              {% if sectionData.heading and options.headings %}
                {{ renderHeading({
                  name: sectionData.heading,
                  datas: options.headings,
                  class: "max-w-[40rem] mx-auto"
                }) }}
              {% endif %}

              {# Icon if present - Using data-svg-src for JS loading #}
              {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
                <div class="{{ iconWrapperStyle }}">
                  {% set iconData = null %}
                  {% for icon in options.icons.icons %}
                    {% if icon.name == sectionData.iconName %}
                      {% set iconData = icon %}
                    {% endif %}
                  {% endfor %}

                  {% if iconData %}
                    <span data-svg-src="{{ iconData.path }}" data-svg-width="{{ iconSize }}" data-svg-height="{{ iconSize }}" class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                      <!-- SVG will be loaded here -->
                    </span>
                  {% else %}
                    <span class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="{{ iconSize }}" height="{{ iconSize }}" fill="currentColor"><circle cx="12" cy="12" r="10"></circle></svg>
                    </span>
                  {% endif %}
                </div>
              {% endif %}

              {# Content #}
              {% if sectionData.content %}
                <div class="{{ contentContainerDesktopStyle }}">
                  {{ sectionData.content | safe }}
                </div>
              {% endif %}

              {# Primary Link #}
              {% if sectionData.primaryLink and options.links %}
                <div class="{{ buttonWrapperStyle }}">
                  {{ renderLink({
                    name: sectionData.primaryLink,
                    datas: options.links
                  }) }}
                </div>
              {% endif %}
            </div>

            {# Right column: Carousel - Reduced to 75% of original size #}
            <div class="{{ mediaContentStyle }} h-full flex items-center justify-center px-16" data-reversed="{{ reversed | string }}">
              {% if sectionData.hasCarousel and sectionData.carouselName %}
                <div class="w-4/5 mx-auto">
                  {{ renderCarousel({
                    name: sectionData.carouselName,
                    datas: options.carousels,
                    images: options.images,
                    buttons: options.buttons,
                    class: "ma-nautic-carousel w-full",
                    theme: carouselTheme
                  }) }}
                </div>
              {% endif %}
            </div>
          </div>
          {% else %}
          <div class="hidden lg:flex lg:flex-row-reverse items-center h-[600px] {{ contentWrapperStyle | replace('lg:flex-row', '') }}">
            {# Left column: Super Heading, Main Heading, Icon, Content and Button #}
            <div class="{{ textContentStyle }} h-full flex flex-col items-center justify-center text-center px-8">
              {# Super Heading (section title with underscore) #}
              {% if sectionData.superHeading and options.headings %}
                {{ renderHeading({
                  name: sectionData.superHeading,
                  datas: options.headings,
                  class: "mb-6 mt-8 ma-nautic-section-title max-w-[40rem] mx-auto"
                }) }}
              {% endif %}

              {# Main Heading (title) #}
              {% if sectionData.heading and options.headings %}
                {{ renderHeading({
                  name: sectionData.heading,
                  datas: options.headings,
                  class: "max-w-[40rem] mx-auto"
                }) }}
              {% endif %}

              {# Icon if present - Using data-svg-src for JS loading #}
              {% if sectionData.hasIcon and sectionData.iconName and options.icons %}
                <div class="{{ iconWrapperStyle }}">
                  {% set iconData = null %}
                  {% for icon in options.icons.icons %}
                    {% if icon.name == sectionData.iconName %}
                      {% set iconData = icon %}
                    {% endif %}
                  {% endfor %}

                  {% if iconData %}
                    <span data-svg-src="{{ iconData.path }}" data-svg-width="{{ iconSize }}" data-svg-height="{{ iconSize }}" class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                      <!-- SVG will be loaded here -->
                    </span>
                  {% else %}
                    <span class="inline-flex items-center justify-center {{ iconContainerSize }} {{ iconStyle }}">
                      <svg xmlns="http://www.w3.org/2000/svg" viewbox="0 0 24 24" width="{{ iconSize }}" height="{{ iconSize }}" fill="currentColor"><circle cx="12" cy="12" r="10"></circle></svg>
                    </span>
                  {% endif %}
                </div>
              {% endif %}

              {# Content #}
              {% if sectionData.content %}
                <div class="{{ contentContainerDesktopStyle }}">
                  {{ sectionData.content | safe }}
                </div>
              {% endif %}

              {# Primary Link #}
              {% if sectionData.primaryLink and options.links %}
                <div class="{{ buttonWrapperStyle }}">
                  {{ renderLink({
                    name: sectionData.primaryLink,
                    datas: options.links
                  }) }}
                </div>
              {% endif %}
            </div>

            {# Right column: Carousel - Reduced to 75% of original size #}
            <div class="{{ mediaContentStyle }} h-full flex items-center justify-center px-16" data-reversed="{{ reversed | string }}">
              {% if sectionData.hasCarousel and sectionData.carouselName %}
                <div class="w-4/5 mx-auto">
                  {{ renderCarousel({
                    name: sectionData.carouselName,
                    datas: options.carousels,
                    images: options.images,
                    buttons: options.buttons,
                    class: "ma-nautic-carousel w-full",
                    theme: carouselTheme
                  }) }}
                </div>
              {% endif %}
            </div>
          </div>
          {% endif %}

          {# Carousel for mobile - Reduced to 75% of original size #}
          {% if sectionData.hasCarousel and sectionData.carouselName %}
            <div class="lg:hidden mt-8" data-reversed="{{ reversed | string }}">
              <div class="w-4/5 mx-auto">
                {{ renderCarousel({
                  name: sectionData.carouselName,
                  datas: options.carousels,
                  images: options.images,
                  buttons: options.buttons,
                  class: "ma-nautic-carousel",
                  theme: carouselTheme
                }) }}
              </div>
            </div>
          {% endif %}
        </div>
      </section>
    </div>
    {# Include external JS files #}
    <script src="/js/organisms/section-scroll.js"></script>
    <script src="/js/organisms/carousel.js" defer></script>
  {% else %}
    <span class="text-red-500">Section About data not found</span>
  {% endif %}
{% endmacro %}

{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "01-organisms/section-about.njk" import renderSectionAbout %}

2. Call a specific section-about by its name
{{ renderSectionAbout({ 
    name: "ma_nautic_about", 
    datas: organisms["section-abouts"], 
    headings: atoms.headings, 
    links: atoms.links,
    icons: atoms.icons,
    carousels: organisms.carousels,
    buttons: atoms.buttons,
    images: atoms.images
}) }}

May your bugs be forever exiled to the shadow realm. 🧙‍♂️✨
#}