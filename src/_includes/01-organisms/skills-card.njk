{# 
=========================
    SKILLS-CARD ORGANISM
    v2.0 - Single call responsive layout       
=========================
#}

{# Import molecules and atoms #}
{% from "02-molecules/caption.njk" import renderCaption %}
{% from "03-atoms/typography.njk" import renderTypography %}
{% from "03-atoms/icon.njk" import renderIcon %}

{% macro renderSkillsCard(option) %}
  {# Check if datas is provided #}
  {% if not option.datas %}
    <span class="text-red-500">Error: No skills-card configuration provided</span>
  {% else %}
    {# Retrieve skills-card configuration #}
    {% set skillsCardConfig = option.datas %}
    {% set skillsCardName = option.name %}
    
    {# Find the specific skills-card by name #}
    {% set skillsCardData = null %}
    {% for skillsCard in skillsCardConfig %}
      {% if skillsCard.name == skillsCardName %}
        {% set skillsCardData = skillsCard %}
      {% endif %}
    {% endfor %}

    {# Fallback if skills-card not found #}
    {% if not skillsCardData %}
      <span class="text-red-500">Skills-card not found: {{ skillsCardName }}</span>
    {% else %}
      {# Calculate mystery chests needed for DESKTOP only #}
      {% set totalSlots = 4 if skillsCardData.grid_layout == "2x2" else 6 %}
      {% set existingItems = skillsCardData.captions.length %}
      {% set missingSlots = totalSlots - existingItems %}
      
      {# Skills Card Container #}
      <div class="skills-card skills-card--{{ skillsCardData.theme }}" data-skills="{{ skillsCardData.name }}">
        
        {# Ic√¥ne de fermeture - Mobile seulement #}
        <div class="skills-card-close" onclick="closeSkillsCard('{{ skillsCardData.name }}')">
          {{ renderIcon({ 
            name: "burger_x",
            datas: option.icon_datas,
            class: "icon-interface"
          }) }}
        </div>
        
        {# Desktop version: Individual card with tooltips #}
        <div class="skills-card-desktop">
          <div class="skills-card-content">
            
            {# Card title #}
            <div class="skills-card-title">
              {{ renderTypography({ 
                name: skillsCardData.title,
                datas: option.typography_datas
              }) }}
            </div>
            
            {# Card captions grid #}
            <div class="skills-card-grid skills-card-grid--{{ skillsCardData.grid_layout }}">
              
              {# Render existing captions #}
              {% for captionName in skillsCardData.captions %}
                <div class="skills-card-item">
                  {{ renderCaption({ 
                    name: captionName,
                    datas: option.caption_datas,
                    iconDatas: option.icon_datas,
                    tooltipDatas: option.tooltip_datas
                  }) }}
                </div>
              {% endfor %}
              
              {# Add mystery chests for empty slots #}
              {% for i in range(missingSlots) %}
                <div class="skills-card-item">
                  {{ renderCaption({ 
                    name: "skills_treasure",
                    datas: option.caption_datas,
                    iconDatas: option.icon_datas,
                    tooltipDatas: option.tooltip_datas
                  }) }}
                </div>
              {% endfor %}
              
            </div>
          </div>
        </div>

        {# Tablet/Mobile version: Same title and captions but different layout #}
        <div class="skills-card-title">
          {{ renderTypography({ 
            name: skillsCardData.title,
            datas: option.typography_datas
          }) }}
        </div>
        
        {% for captionName in skillsCardData.captions %}
          {{ renderCaption({ 
            name: captionName,
            datas: option.caption_datas,
            iconDatas: option.icon_datas,
            tooltipDatas: option.tooltip_datas
          }) }}
        {% endfor %}

      </div>
    {% endif %}
  {% endif %}
{% endmacro %}

{# 
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "01-organisms/skills-card.njk" import renderSkillsCard %}

2. Wrap your 4 skills cards in a wrapper div for grid layout
<div class="skills-wrapper">
  {{ renderSkillsCard({ 
      name: "soft_skills_card",
      datas: organisms["skills-card"]["skills-cards"],
      typography_datas: atoms.typography.texts,
      caption_datas: molecules.caption.captions,
      icon_datas: atoms.icon.icons,
      tooltip_datas: atoms.tooltip.tooltips
  }) }}
  
  {{ renderSkillsCard({ 
      name: "hard_skills_card",
      datas: organisms["skills-card"]["skills-cards"],
      typography_datas: atoms.typography.texts,
      caption_datas: molecules.caption.captions,
      icon_datas: atoms.icon.icons,
      tooltip_datas: atoms.tooltip.tooltips
  }) }}
  
  {{ renderSkillsCard({ 
      name: "interests_card",
      datas: organisms["skills-card"]["skills-cards"],
      typography_datas: atoms.typography.texts,
      caption_datas: molecules.caption.captions,
      icon_datas: atoms.icon.icons,
      tooltip_datas: atoms.tooltip.tooltips
  }) }}
  
  {{ renderSkillsCard({ 
      name: "languages_card",
      datas: organisms["skills-card"]["skills-cards"],
      typography_datas: atoms.typography.texts,
      caption_datas: molecules.caption.captions,
      icon_datas: atoms.icon.icons,
      tooltip_datas: atoms.tooltip.tooltips
  }) }}
</div>

3. Desktop/Tablet: All 4 cards visible in 2x2 grid
4. Mobile: Cards hidden by default, shown via JS buttons (.active class)

May your bugs be forever exiled to the shadow realm. üßô‚Äç‚ôÇÔ∏è‚ú®
#}