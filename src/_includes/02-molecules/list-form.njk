{#
=========================
       LIST-FORM        
=========================
#}

{% from "03-atoms/input.njk" import renderInput as renderAtomInput %}

{% macro renderListForm(options) %}
  {# Default values for optional parameters #}
  {% set recaptchaSiteKey = options.recaptchaSiteKey | default('VOTRE_RECAPTCHA_SITE_KEY') %}
  {% set submitLabel = options.submitLabel | default('Envoyer') %}
  {% set action = options.action | default('/merci') %}
  {% set method = options.method | default('POST') %}
  {% set class = options.class | default('bg-[#2b3947]') %}
  {% set inputWidth = options.inputWidth | default('w-80') %}
  {% set messageInputWidth = options.messageInputWidth | default('w-full') %}

  {% if options.datas %}
    {# Get global styling #}
    {% set globalStyle = options.datas.globalStyle %}
    
    {# Find form configuration #}
    {% set formData = null %}
    {% if options.name %}
      {% for form in options.datas.forms %}
        {% if form.name == options.name %}
          {% set formData = form %}
        {% endif %}
      {% endfor %}
    {% endif %}

    {# Fallback to first form if not found #}
    {% if not formData %}
      {% set formData = options.datas.forms[0] %}
    {% endif %}
    
    {# Render form with appropriate attributes #}
    <form id="form-{{ formData.name }}" 
      class="w-full {{ class }}"  
      method="{{ method }}" 
      data-netlify="true"
      action="{{ action }}"
      netlify-honeypot="bot-field">

    {# Honeypot field for bot protection #}
    <p style="display: none;">
      <label>Ne remplissez pas ce champ si vous √™tes humain :  
        <input name="bot-field">
      </label>
    </p>

      {# First row - Name and Email #}
      <div class="flex flex-col md:flex-row justify-center md:space-x-8 space-y-4 md:space-y-0 mb-4">
        {% for input in formData.inputs %}
          {% if input.name == 'input_name' or input.name == 'input_email' %}
              <div class="flex justify-center">
              {{ renderAtomInput({ 
                name: input.name, 
                datas: options.atoms.inputs,
                inputWidth: inputWidth
              }) }}
            </div>
          {% endif %}
        {% endfor %}
      </div>
      
      {# Second row - Phone and Boats #}
      <div class="flex flex-col md:flex-row justify-center md:space-x-8 space-y-4 md:space-y-0 mb-4">
        {% for input in formData.inputs %}
          {% if input.name == 'input_phone' or input.name == 'input_boat' %}
            <div class="flex justify-center">
              {{ renderAtomInput({ 
                name: input.name, 
                datas: options.atoms.inputs,
                inputWidth: inputWidth
              }) }}
            </div>
          {% endif %}
        {% endfor %}
      </div>
      
      {# Third row - Message #}
      <div class="flex justify-center mb-6 w-full">
        {% for input in formData.inputs %}
          {% if input.name == 'input_message' %}
            <div class="flex justify-center">
              {{ renderAtomInput({ 
                name: input.name, 
                datas: options.atoms.inputs,
                inputWidth: "w-80 md:min-w-[calc(2*20rem+2rem)]",
                textareaHeight: "h-[6rem]",
                textareaRows: "6"
              }) }}
            </div>
          {% endif %}
        {% endfor %}
      </div>
      
      {# Fourth row - reCAPTCHA #}
      <div class="w-full flex justify-center mb-6">
        <div class="g-recaptcha" data-sitekey="{{ recaptchaSiteKey }}"></div>
      </div>
      
      {# Fifth row - Submit button #}
      <div class="w-full flex justify-center mb-6">
        <button type="submit" class="bg-[#63a595] hover:bg-[#e8ab55] text-white px-6 py-3 transition-colors duration-300 rounded-full cursor-pointer">
          {{ submitLabel }}
        </button>
      </div>
      
      {# Legal notices - Changed to use full width instead of max-width #}
      <div class="w-full mx-auto text-xs text-white opacity-80 leading-relaxed text-justify [hyphens:auto]">
        <p>Pour traiter votre demande, nous utiliserons et conserverons vos donn√©es personnelles pendant 2 ans apr√®s notre dernier contact. Elles resteront confidentielles et ne seront pas partag√©es avec des tiers.</p>
        <p class="mt-2">Conform√©ment √† la loi Informatique et Libert√©s du 6 janvier 1978 modifi√©e, vous b√©n√©ficiez d'un droit d'acc√®s et de rectification des donn√©es vous concernant, d'un droit d'opposition pour motifs l√©gitimes, d'un droit √† l'effacement des donn√©es. Vous disposez √©galement d'un droit √† la r√©ception et √† la portabilit√© des donn√©es dans certains cas sp√©cifiquement pr√©vus par la loi.</p>
      </div>
    </form>
  {% else %}
    <span class="text-red-500">List form data not found</span>
  {% endif %}
{% endmacro %}


{#
============================
Summon HAT Components Wisely
============================

1. Import the macro at the top of your page
{% from "02-molecules/list-form.njk" import renderListForm %}

2. Call a specific list-form by its name
{{ renderListForm({ 
    name: "contact_form",
    datas: molecules["list-forms"],
    atoms: atoms
}) }}

May your bugs be forever exiled to the shadow realm. üßô‚Äç‚ôÇÔ∏è‚ú®
#}